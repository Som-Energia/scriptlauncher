<!doctype html>
<html>
<head>
    <title>Ejecutando Tests a parameter is passed as literal. If empty a default value is used.
</title>
    <style>
        .ansi_terminal { white-space: pre; font-family: monospace; }
.ansi_black { color: black; }
.ansi_red { color: darkred; }
.ansi_green { color: darkgreen; }
.ansi_yellow { color: orange; }
.ansi_blue { color: darkblue; }
.ansi_magenta { color: purple; }
.ansi_cyan { color: darkcyan; }
.ansi_white { color: lightgray; }
.ansi_bright.ansi_black { color: gray; }
.ansi_bright.ansi_red { color: red; }
.ansi_bright.ansi_green { color: green; }
.ansi_bright.ansi_yellow { color: yellow; }
.ansi_bright.ansi_blue { color: blue; }
.ansi_bright.ansi_magenta { color: magenta; }
.ansi_bright.ansi_cyan { color: cyan; }
.ansi_bright.ansi_white { color: white; }
.ansi_bgblack { background-color: black; }
.ansi_bgred { background-color: red; }
.ansi_bggreen { background-color: green; }
.ansi_bgyellow { background-color: yellow; }
.ansi_bgblue { background-color: blue; }
.ansi_bgmagenta { background-color: magenta; }
.ansi_bgcyan { background-color: cyan; }
.ansi_bgwhite { background-color: white; }
.ansi_bright { font-weight: bold; }
.ansi_faint { opacity: .5; }
.ansi_italic { font-style: italic; }
.ansi_underscore { text-decoration: underline; }
.ansi_blink { text-decoration: blink; }
.ansi_reverse { border: 1pt solid; }
.ansi_hide { opacity: 0; }
.ansi_strike { text-decoration: line-through; }
        .ansi_terminal {
            padding: 2em;
            border: 2pt #489 solid;
            overflow: auto;
            overflow-y: hidden;
        }
        .commandline {
            padding: 1ex;
            background: #DDD;
        }
        .links {
            padding: 1ex;
        }
        .return_code {
            padding: 1ex;
        }
        .parameter {
            margin-top: 3px;
            margin-bottom: 3px;
        }
        .param_name {
            padding: 1ex;
        }
        .loading {
            margin: auto;
        }
        .downloading_file {
            display: none;
        }
        .uploader label,
        input[type=submit] {
            background-color: #7ad;
            color: black;
            border-radius: 4pt;
            border: 2px outset black;
            padding: 4px 3ex;
            cursor: pointer;
            display: inline-block;
            text-shadow: 1px 1px 1px white;
        }
        .uploader label:hover,
        input[type=submit]:hover {
            text-shadow: 1px 1px 3px white;
            background-color: #8bf;
        }
        .uploader label:active,
        input[type=submit]:active {
            border: 2px inset black;
        }
        .uploader {
            display: inline-block;
            margin: 10px;
        }
        .uploader input[type=file] {
            display: none;
        }
        @keyframes spin {
            from { transform: rotate(0); }
            to { transform: rotate(360deg); }
        }
        .uploader.uploading .uploading_filename:after {
            display: inline-block;
            margin-left: 8pt;
            color: maroon;
            content: "\1F5D8";
            line-height: 0; /* Trick to center spin */
            animation: spin 1s linear infinite;
        }
        .uploader.uploaded .uploading_filename:after {
            display: inline-block;
            margin-left: 8pt;
            color: green;
            content: "\2713";
        }
        .loading span {
          line-height: 32px;
          margin-left: 12px;
          font-size: 16px;
          vertical-align: middle;
        }

        .loading img { vertical-align: middle; }

        .loading_wrp {
          background-color: #FFF;
          display: block;
          height: 100%;
          left: 0;
          opacity: 0.5;
          filter: alpha(opacity=50);
          position: absolute;
          top: 0;
          width: 100%;
          z-index: 1020;
        }

        .loading_wrp .x16 span {
          line-height: 16px;
          font-size: 12px;
          margin-left: 6px;
        }

        .loading_wrp .x32 img {
          width: 32px;
          height: 32px;
        }

    </style>
<!--    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>-->
    <script src="/static/jquery-1.11.0.min.js"></script>
    <script src="/static/upload.js"></script>
    <script src="/static/jquery-loader.js"></script>
    <link rel="stylesheet" type="text/css" href="/static/style.css">
</head>
<body>
    <h1>Passing parameters</h2>
    <h4>Tests a parameter is passed as literal. If empty a default value is used.
</h4>
    <form name="runner" id="runner">
        
            
                <div class='parameter'>
                
                      <label for="nouser" class="param_name">Output text [nouser]:</label>
                      <input name="nouser"
                        
                          value="It works
" 
                      />
                
                </div>
            
        
    
        
            <div class="commandline"><tt>/usr/bin/printf {nouser}</tt>
        
        
            <tt></tt>
        
        </div>
    
        <input type="submit" value="Executar"/>
    </form>
    <div id="result-title">Sortida:</div>
    <div id="result" class="ansi_terminal"></div>
    <div id="return-code" class="return_code"></div>
    <div id="download-div" class="downloading_file"><a id="download-link" href="">Descarrega l'arxiu</a></div>
    <div id="index-link" class="links"><a href="/">Torna a la llista d'scripts</a></div>
<script type="text/javascript">
function setUploaderState(paramName, state) {
    ['empty', 'uploading', 'uploaded'].map(function(stateclass) {
        if (state === stateclass) {
            $(".uploader-"+paramName).addClass(stateclass);
        }
        else {
            $(".uploader-"+paramName).removeClass(stateclass);
        }
    });
}
function uploaderIsInState(paramName, state) {
    const selector = ".uploader-"+paramName+"."+state;
    const inState = $(selector);
    return inState.length !== 0;
}
$(document).ready(function(){
    // Reset all hidden upload fields
    // Some browsers cache them on page reload
    $('.upload-fileid').val('');

    $("#runner").submit(function(e) {
        var errors = [];
        
        
        
        if (errors.length !== 0) {
            alert(errors.join("\n"))
            e.preventDefault();
            return;
        }
        $("#result").css("border-color","#489");
        $("#runner").loader({
            imgUrl: "/static/loading32x32.gif"
        });
        $.post(
            "/run/test_parameter",
            $(this).serialize(),
            function(data) {
                var response= jQuery.parseJSON(data);
                $("#result").html(response.response);
                if (response.return_code!=0) {
                     $("#return-code").html('Resultat: Falla ('+response.return_code+')');
                     $("#result").css("border-color","#C80000");
                }
                else {
                     $("#return-code").html('Resultat: Ok ('+response.return_code+')');
                     $("#result").css("border-color","#00C800");
                }
                $.loader.close();
                if (response.output_file!=false) {
                    var downloaduri = "/download/"+response.script_name+"/"+response.output_param+"/"+response.output_file;
                    console.log("downloading ", downloaduri);
                    window.location = downloaduri;
                }
            }).fail(function(data) {
                $.loader.close();
                $("#result").html(
                    "Error inexperat de l'script launcher executant l'ordre.\n" +
                    "Error "+ data.status +
                    " " + data.statusError + "\n"
                    );
                console.log(data);
                $("#result").css("border-color","#C80000");
            });
        e.preventDefault();
    });
    
    
    
});
</script>
</body>
</html>
